#!/usr/bin/bash


function __usage_mdtemp() {
    printf "Usage: mdtemp -d [directory] [-h] [-c]\nFlags:\n\t-d: Directory Name to create (Default: 'mdtemplate/')\n\t-c: Initialize Citations\n\t-h: Help\n"
}


function __check_response(){
    if [[ "$1" == "Y" || "$1" == "y" ]]; then
        echo 0
    elif [[ "$1" == "N" || "$1" == "n" ]]; then
        echo 1
    else
        echo 2
    fi
}

function __init_cite() {
    if [ -f $MDTEMP/csl_getter.py ]; then
        python3 $MDTEMP/csl_getter.py -m main
    else
        printf "${RED}Can't find csl_getter.py. Exiting."
        return 1
    fi
    if [ -f tmp.txt ]; then
        csl=$(cat tmp.txt)
        rm tmp.txt
    else
        printf "${RED}Error retrieving CLS info. Exiting.\n"
        return 1
    fi

    # need to get last part of the string as this is the actual filename
    temp=$(echo $csl |  grep -oE "[^/]+(?=/$|$)")
    status_code=$(curl --write-out %{http_code} -so $PWD/$DIR/$temp -OL https://raw.githubusercontent.com/citation-style-language/styles/master/$csl)
    if [ "$status_code" -ne 200 ]; then
        printf "${RED}Invalid CSL. Exiting.\n"
        return 1
    fi
    
    # assign to regexed filename to csl for later use
    csl=$temp
}

GREEN=$'\033[1;32m'
RED=$'\033[1;31m'
BGREEN=$'\033[4;32m'
citations="false"
DEPS="main.md"
CITE=""
CSL="---"
CMD=""
DIR="mdtemplate"

[ $# -lt 1 ] && __usage_mdtemp
if [ $# -ne 1 ]; then
    while getopts "d:ch" opt; do
        case ${opt} in
            d)
                # in case the user wants to be tricky and do mdtemp -d -c
                [ "${OPTARG}" != "-c" ] && DIR=${OPTARG} || citations="true"
                ;;
            c)
                citations="true"
                ;;
            h | *)
                __usage_mdtemp
                exit 1
                ;;
        esac
    done
    shift $((OPTIND -1))
fi

if [ -e ${PWD}/$DIR ]; then
    printf "The folder already exists. Overwrite it? (y/n): "
    read -r create
    response=$(__check_response $create)
    if [[ "$response" == "0" ]]; then
        rm -r $PWD/$DIR
        mkdir $PWD/$DIR
    else
        echo "Exiting"
        exit 1
    fi
    else
    mkdir $PWD/$DIR
fi

if [ "$citations" = "true" ]; then
    __init_cite
    if [ "$?" -ne 1 ]; then
        printf "@inproceedings{Tehrany2020EvaluatingPC, \ttitle={Evaluating Performance Characteristics of the PMDK Persistent Memory Software Stack}, \tauthor={Nick Tehrany},\tyear={2020}\n}\n" > $PWD/$DIR/main.bib && DEPS="main.md main.bib" && CITE="\nThis is how a citation works @Tehrany2020EvaluatingPC\n\n# References\n" && CSL="csl: $csl\n\055--" && CMD="\055-bibliography main.bib"
    else
        exit 1
    fi
fi

printf "\055--\ntitle: Title\nauthor: Author\ndate: $(date +'%B %d %Y')\nabstract: \"\"\ntheme: Copenhagen\n$CSL\n# Heading\n\nSome text here.\n\n## Subsection\n\nSome more sample text.\n$CITE" > $PWD/$DIR/main.md

printf "DOC = main\nDEPS = $DEPS\n\n.PHONY: all view presentation clean\n\nall: report\n\nreport: \$(DEPS)\n\tpandoc \$(DOC).md -o main.pdf $CMD\n\npresentation: \$(DEPS)\n\tpandoc -t beamer \$(DOC).md -o main.pdf $CMD\n\nview: report\n\txdg-open \$(DOC).pdf\n\nclean:\n\t\$(RM) \$(DOC).pdf\n" > $PWD/$DIR/Makefile

printf "${GREEN}Finished setting up template in ${BGREEN}$PWD/$DIR\n"
